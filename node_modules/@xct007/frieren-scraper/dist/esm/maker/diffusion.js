import { Axios } from "../Utils.js";
import { PrivateWorkerApiItsrose } from "../Constant.js";
class Diffusion {
    example;
    advanceExample;
    #queue;
    constructor() {
        this.#queue = 0;
        this.example = "beatiful girl, looking to viewer, warm smile,";
        this.advanceExample =
            "SamDoesArt, a girl, brown hair, blue eyes, black hoodie, piercing, tattoos, day, sunny, cars, city, HDRI, masterpiece, sharp focus, smooth, illustration, golden ratio,";
    }
    add() {
        this.#queue = this.#queue + 1;
    }
    remove() {
        this.#queue = this.#queue - 1;
    }
    async stable(prompt, seed = false) {
        if (this.#queue >= 5) {
            return {
                error: true,
                message: "Please wait, you in position " + (this.#queue + 1),
            };
        }
        try {
            this.add();
            if (!seed) {
                seed = Math.random().toString().substring(2, 11);
            }
            const { data } = await Axios.request({
                baseURL: PrivateWorkerApiItsrose,
                url: "/api/stableDiffusion",
                method: "POST",
                data: new URLSearchParams({ prompt, seed: String(seed) }),
            }).catch((e) => e?.response);
            this.remove();
            return data;
        }
        catch (e) {
            return {
                error: true,
                message: String(e),
            };
        }
    }
}
export const diffusion = new Diffusion();
