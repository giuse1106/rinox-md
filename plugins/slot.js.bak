import fs from 'fs';

let reg = 40;
let handler = async (m, { conn, args, usedPrefix, command }) => {
    // Comando .slot
    if (command === 'slot') {
        let fa = `.`.trim();
        let users = global.db.data.users[m.sender];

        // Assicurati che l'utente abbia monete per giocare
        let apuesta = parseInt(args[0]);
        if (isNaN(apuesta)) {
            return m.reply('Per favore, inserisci un numero valido per la scommessa!');
        }

        if (apuesta > users.coins) {
            return m.reply('Non hai abbastanza monete per fare questa scommessa.');
        }

        // Emojis per la slot machine
        let emojis = ["🪙", "🎰", "💎"];
        let a = Math.floor(Math.random() * emojis.length);
        let b = Math.floor(Math.random() * emojis.length);
        let c = Math.floor(Math.random() * emojis.length);

        let x = [], y = [], z = [];
        for (let i = 0; i < 3; i++) {
            x[i] = emojis[a];
            a++;
            if (a == emojis.length) a = 0;
        }
        for (let i = 0; i < 3; i++) {
            y[i] = emojis[b];
            b++;
            if (b == emojis.length) b = 0;
        }
        for (let i = 0; i < 3; i++) {
            z[i] = emojis[c];
            c++;
            if (c == emojis.length) c = 0;
        }

        let end;
        if (a == b && b == c) {
            end = `🎉 Hai vinto! 🎁`;
            users.coins += apuesta;  // Aggiungi monete quando vince
            users.vittorie = (users.vittorie || 0) + 1;  // Incrementa vittorie
        } else if (a == b || a == c || b == c) {
            end = `Continua a tentare...`;
        } else {
            end = `😢 Hai perso!`;
            users.coins -= apuesta;  // Rimuovi monete quando perde
            users.sconfitte = (users.sconfitte || 0) + 1;  // Incrementa sconfitte
        }

        // Salvataggio dei dati nel database JSON
        fs.writeFileSync('./data.json', JSON.stringify(global.db, null, 2));

        return await m.reply(`
🎰 ┃ 𝐒𝐋𝐎𝐓
──────────
${x[0]} : ${y[0]} : ${z[0]}
${x[1]} : ${y[1]} : ${z[1]}
${x[2]} : ${y[2]} : ${z[2]}
──────────

${end}

Monete disponibili: ${users.coins}
Vittorie: ${users.vittorie || 0}
Sconfitte: ${users.sconfitte || 0}
`);
    }

    // Comando .monete
    if (command === 'monete') {
        // Verifica se l'utente che invoca il comando è l'owner del bot
        const ownerId = "639553054136@s.whatsapp.net"; // Sostituisci con l'ID dell'owner

        // Controlla che sia presente un valore e un @utente
        if (!args[0] || !args[1]) {
            return m.reply('Per favore, usa il comando nel formato: .monete <numero> @utente');
        }

        let coinsToAdd = parseInt(args[0]);
        if (isNaN(coinsToAdd)) {
            return m.reply('Per favore, inserisci un numero valido per le monete.');
        }

        // Se non è l'owner, non eseguire il comando
        if (m.sender !== 6282120612671) {
            return m.reply('Solo l\'owner del bot può usare questo comando.');
        }

        // Estrai l'ID dell'utente destinatario
        let userMentioned = m.mentionedJid[0];
        if (!userMentioned) {
            return m.reply('Per favore, menziona un utente a cui dare le monete.');
        }

        // Verifica che l'utente destinatario esista nel database
        let targetUser = global.db.data.users[userMentioned];
        if (!targetUser) {
            return m.reply('Utente non trovato nel database.');
        }

        // Aggiungi le monete all'utente destinatario
        targetUser.coins += coinsToAdd;

        // Salvataggio dei dati nel database JSON
        fs.writeFileSync('./data.json', JSON.stringify(global.db, null, 2));

        // Risposta con il tag dell'utente
        let userTag = '@' + userMentioned.split('@')[0]; // Estrai il tag dell'utente (senza il suffisso "@s.whatsapp.net")
        return m.reply(`Hai dato ${coinsToAdd} monete a ${userTag}`);
    }
};

handler.help = ['slot <apuesta>', 'monete <numero> @utente'];
handler.tags = ['game'];
handler.command = ['slot', 'monete'];

export default handler;
